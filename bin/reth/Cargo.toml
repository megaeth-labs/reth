[package]
name = "reth"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
description = "Reth node implementation"
default-run = "reth"

[lints]
workspace = true

[dependencies]
# reth
reth-config.workspace = true
reth-primitives = { workspace = true, features = ["arbitrary", "clap"] }
reth-db = { workspace = true, features = ["mdbx"] }
reth-provider = { workspace = true }
reth-revm.workspace = true
reth-stages.workspace = true
reth-interfaces = { workspace = true, features = ["clap"] }
reth-transaction-pool.workspace = true
reth-beacon-consensus.workspace = true
reth-auto-seal-consensus.workspace = true
reth-consensus-common.workspace = true
reth-blockchain-tree.workspace = true
reth-rpc-engine-api.workspace = true
reth-rpc-builder.workspace = true
reth-rpc.workspace = true
reth-rpc-types.workspace = true
reth-rpc-types-compat.workspace = true
reth-rpc-api = { workspace = true, features = ["client"] }
reth-network = { workspace = true, features = ["serde"] }
reth-network-api.workspace = true
reth-downloaders.workspace = true
reth-tracing.workspace = true
reth-tasks.workspace = true
reth-ethereum-payload-builder.workspace = true
reth-payload-builder.workspace = true
reth-payload-validator.workspace = true
reth-basic-payload-builder.workspace = true
reth-discv4.workspace = true
reth-prune.workspace = true
reth-static-file = { workspace = true, features = ["clap"] }
reth-trie = { workspace = true, features = ["metrics"] }
reth-nippy-jar.workspace = true
reth-node-api.workspace = true
reth-node-ethereum.workspace = true
reth-node-optimism = { workspace = true, optional = true, features = ["optimism"] }
reth-node-core.workspace = true
reth-node-builder.workspace = true

revm-utils = { workspace = true, optional = true }
revm = { workspace = true, optional = true}

# crypto
alloy-rlp.workspace = true
alloy-chains.workspace = true

# tracing
tracing.workspace = true

# io
fdlimit = "0.3.0"
serde.workspace = true
serde_json.workspace = true
confy.workspace = true
toml = { workspace = true, features = ["display"] }

# metrics
metrics-process = "=1.0.14"


# test vectors generation
proptest.workspace = true
rand.workspace = true

# tui
comfy-table = "7.0"
crossterm = "0.27.0"
ratatui = "0.25.0"
human_bytes = "0.4.1"

# async
tokio = { workspace = true, features = ["sync", "macros", "time", "rt-multi-thread"] }
futures.workspace = true

# misc
aquamarine.workspace = true
eyre.workspace = true
clap = { workspace = true, features = ["derive"] }
tempfile.workspace = true
backon = "0.4"
similar-asserts.workspace = true
itertools.workspace = true
rayon.workspace = true
boyer-moore-magiclen = "0.2.16"

perf-metrics = { workspace = true, optional = true }

[target.'cfg(unix)'.dependencies]
tikv-jemallocator = { version = "0.5.0", optional = true }
libc = "0.2"

[dev-dependencies]
jsonrpsee.workspace = true
assert_matches = "1.5.0"

[features]
default = ["jemalloc"]

asm-keccak = ["reth-primitives/asm-keccak"]

jemalloc = ["dep:tikv-jemallocator", "reth-node-core/jemalloc"]
jemalloc-prof = ["jemalloc", "tikv-jemallocator?/profiling"]

min-error-logs = ["tracing/release_max_level_error"]
min-warn-logs = ["tracing/release_max_level_warn"]
min-info-logs = ["tracing/release_max_level_info"]
min-debug-logs = ["tracing/release_max_level_debug"]
min-trace-logs = ["tracing/release_max_level_trace"]

optimism = [
    "reth-primitives/optimism",
    "reth-revm/optimism",
    "reth-interfaces/optimism",
    "reth-rpc/optimism",
    "reth-rpc-engine-api/optimism",
    "reth-provider/optimism",
    "reth-beacon-consensus/optimism",
    "reth-auto-seal-consensus/optimism",
    "reth-network/optimism",
    "reth-network-api/optimism",
    "reth-blockchain-tree/optimism",
    "dep:reth-node-optimism",
    "reth-node-core/optimism",
]

# no-op feature flag for switching between the `optimism` and default functionality in CI matrices
ethereum = []
# support perf test
open_performance_dashboard = [
    "reth-stages/open_performance_dashboard",
    "perf-metrics",
    "reth-node-builder/open_performance_dashboard"
]
enable_opcode_metrics = [
    "perf-metrics/enable_opcode_metrics",
    "reth-revm/enable_opcode_metrics",
    "reth-stages/enable_opcode_metrics",
    "open_performance_dashboard",
]
enable_cache_record = [
    "perf-metrics/enable_cache_record",
    "reth-revm/enable_cache_record",
    "reth-stages/enable_cache_record",
    "open_performance_dashboard",
]
enable_tps_gas_record = [
    "perf-metrics/enable_tps_gas_record",
    "reth-stages/enable_tps_gas_record",
    "open_performance_dashboard",
]
finish_after_execution_stage = ["reth-stages/finish_after_execution_stage"]
enable_execution_duration_record = [
    "perf-metrics/enable_execution_duration_record",
    "reth-stages/enable_execution_duration_record",
    "reth-revm/enable_execution_duration_record",
    "open_performance_dashboard",
]

[[bin]]
name = "reth"
path = "src/main.rs"

[[bin]]
name = "op-reth"
path = "src/optimism.rs"
required-features = ["optimism"]